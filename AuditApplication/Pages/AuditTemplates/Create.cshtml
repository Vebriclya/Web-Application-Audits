@page
@model AuditApplication.Pages.AuditTemplates.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Audit Template</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" id="createForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="AuditTemplate.Name" class="control-label"></label>
                <input asp-for="AuditTemplate.Name" class="form-control" />
                <span asp-validation-for="AuditTemplate.Name" class="text-danger"></span>
            </div>
            <div id="sections">
                <!-- Section fields are dynamically added here -->
            </div>
            <button type="button" onclick="addSection()">Add Section</button>
            
            <div id="questions">
                <!-- Question fields are dynamically added here -->
            </div>
            <button type="button" onclick="addQuestion()">Add Question</button>
            
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("Shared/_ValidationScriptsPartial"); }
    <script>
        
        new Sortable(document.getElementById('templateContent'), {
            animation: 150,
            ghostClass: 'blue-background-class',
            onEnd: function (evt) {
                let items = $('.sortable-item').map(function(index) {
                    return {
                        id: $(this).data('id'),
                        type: $(this).hasClass('section') ? 'section' : 'question',
                        order: index
                    };
                }).get();
                
                $.ajax({
                    url: '?handler=UpdateOrder',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(items),
                    headers: {
                        "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            console.log('Order updated successfully');
                        } else {
                            console.error('Failed to update order: ', result.message);
                        }
                    },
                    error: function(xhr, status, error){
                        console.error("Error updating order: ", error);
                    }
                });
            }
        });
   
        function addSection() {
            var sectionIndex = $('.section').length;
            var sectionHtml = `
            <div class="section">
                <input name="Sections[${sectionIndex}].Name" class="form-control" placeholder="Section Name" />
                <button type="button" onclick="remove(this)">Remove Section</button>
            </div>`;
            $('#sections').append(sectionHtml);
        }
        
        function addQuestion() {
            var questionIndex = $('.question').length;
            var questionHtml = `
            <div class="question">
                <input name="Questions[${questionIndex}].Text" class="form-control" placeholder="Question Text" />
                <select name="Questions[${questionIndex}].SectionId" class="form-control">
                    ${$('.section').map((i, section) => `<option value="${i}">${$(section).find('input').val()}</option>`).get().join('')}
                </select>
                <button type="button" onclick="remove(this)">Remove Question</button>
            </div>`;
            $('#questions').append(questionHtml);
        }
        
        function remove(button) {
            $(button).closest('.section, .question').remove();
        }
    
    </script>
    }

