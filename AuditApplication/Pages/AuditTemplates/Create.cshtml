@page
@model AuditApplication.Pages.AuditTemplates.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}


<h2>Create New Audit Template</h2>

<div class="form-container">
    <div class="form-group">
        <label for="templateTitle">Template Title:</label>
        <input type="text" class="form-control" id="templateTitle" placeholder="Enter template title">
        <button id="saveTemplate" class="btn btn-default">Save</button>
    </div>
    
    <div class="button-group">
        <button id="addSection" class="btn btn-default">Add Section</button>
        <button id="addQuestion" class="btn btn-secondary">Add Question</button>
    </div>
    
    <div id="sectionInput" class="input-group" style="display: none;">
        <input type="text" id="sectionName" class="form-control" placeholder="Section Title"/>
        <button id="saveSection" class="btn btn-success">Save</button>
        <button id="cancelSection" class="btn btn-default">Cancel</button>
    </div>
    
    <div id="questionInput" class="input-group" style="display: none;">
        <input type="text" id="questionText" class="form-control" placeholder="Question Text"/>
        <button id="saveQuestion" class="btn btn-success">Save</button>
        <button id="cancelQuestion" class="btn btn-default">Cancel</button>
    </div>
    
    <div id="templateContent" class="sortable-list"></div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("Shared/_ValidationScriptsPartial"); }
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
    <script>
        let templateId = null;
        
        $(document).ready(function () {
            $('#saveTemplate').click(function () {
                let title = $('#templateTitle').val().trim();
                if (title) {
                    $.ajax({
                        url: '?handler=CreateTemplate',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ name: title}),
                        headers: {
                            "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function(result) {
                            if(result.success){
                                templateId = result.id;
                                alert('Template saved successfully');
                            }
                        }
                    });
                }  else {
                    alert('Please enter a title for the template');
                }
            });
            
            $('#addSection').click(function(){
                let sectionName = $('#sectionName').val().trim();
                if (sectionName && templateId) {
                    $.ajax({
                        url: '?handler=AddSection',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({name: sectionName, auditTemplateId: templateId}),
                        headers: {
                            "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function (result) {
                            if (result.success) {
                                $('#templateContent').append(`<div class="sortable-item section" data-id="${result.id}">${sectionName}<span class="delete-btn">✖</span></div>`);
                                $('#sectionInput').hide();
                                $('#sectionName').val('');
                            } else {
                                alert(result.message || "Failed to add section");
                            }
                        }
                    });
                } else {
                    alert('Please enter a section name');
                }
            });
            
            $('#saveQuestion').click(function () {
                let questionText = $('#questionText').val().trim();
                if (questionText && templateId) {
                    $.ajax({
                        url: '?handler=AddQuestion',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({text: questionText, sectionId: getLastSectionId()}),
                        headers: {
                            "RequestVerificationToken": 
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function (result) {
                            if (result.success) {
                                $('#templateContent').append(`<div class="sortable-item question" data-id="${result.id}">${questionText}<span class="delete-btn">✖</span></div>`);
                                $('#questionInput').hide();
                                $('#questionText').val('');
                            } else {
                                alert(result.message || "Failed to add question");
                            }
                        }
                    });
                } else {
                    alert('Please enter a question');
                }
            });
            
            $('#cancelSection', '#cancelQuestion').click(function () {
                $(this).closest('.input-group').hide();
            });
            
            $(document).on('click', '.delete-btn', function () {
                let item = $(this).parent();
                let isSection = item.hasClass('section');
                let url = isSection ? '?handler=DeleteSection' : '?handler=DeleteQuestion';
                
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: JSON.stringify({id: item.data('id')}),
                    contentType: 'application/json',
                    headers: {
                        "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            item.remove();
                        } else {
                            alert(result.message || "Failed to delete item");
                        }
                    }
                });
            });
            
            function getLastSectionId() {
                return $('.sortable-item.section').last().data('id');
            }
            
            new Sortable(document.getElementById('templateContent'), {
            animation: 150,
            ghostClass: 'blue-background-class',
            onEnd: function (evt) {
                let items = $('.sortable-item').map(function(index) {
                    return {
                        id: $(this).data('id'),
                        type: $(this).hasClass('section') ? 'section' : 'question',
                        order: index
                    };
                }).get();
                
                $.ajax({
                    url: '?handler=UpdateOrder',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(items),
                    headers: {
                        "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            console.log('Order updated successfully');
                        } else {
                            console.error('Failed to update order: ', result.message);
                        }
                    },
                    error: function(xhr, status, error){
                        console.error("Error updating order: ", error);
                    }
                });
            }});
        });
    </script>
}

