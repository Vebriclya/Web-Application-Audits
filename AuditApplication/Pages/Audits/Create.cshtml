@page
@model AuditApplication.Pages.Audits.CreateModel

@{
    ViewData["Title"] = "Create New Audit";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="row header-area m-0">
    <div class="col-12 d-flex justify-content-between align-items-center">
        <div class="col-2 text-start">
            <a asp-page="Index">&lt;--Back to List</a>
        </div>
        <div class="col-2"></div>
        <h3 id="auditTitle" class="col-6 text-center m-0">New Audit</h3>
        <div class="col-2 text-end"></div>
    </div>
</div>

<div class="row g-0">
    <div class="col-3 left-sidebar">
        <ul class="list-group" id="sectionList">
            <!-- Do not fret, population lies here -->
        </ul>
    </div>
    <div class="col-9 right-content">
        <div id="templateSelection" class="d-flex justify-content-start align-items-center mt-4 ms-4">
                <select id="templateDropdown" class="form-select me-3" style="width: 300px;" asp-items="@(new SelectList(Model.AvailableTemplates, "Id", "Name"))">
                    <option>Select an audit template to begin</option>
                </select>
                <button id="beginAudit" class="btn btn-primary">Begin</button>
        </div>
        <div id="sectionDetails" class="mt-4" style="display: none;">
            <!-- I, too, shall be populated -->
        </div>
    </div>
</div>

@Html.AntiForgeryToken()
@section Scripts
{
    <script>
        let currentAuditId = null;
        
        $(document).ready(function () {
            $('#beginAudit').click(function () {
                var $dropdown = $('#templateDropdown');
                var templateId = parseInt($dropdown.val());

                if (templateId){
                    document.getElementById('templateSelection').style.cssText = 'display: none !important;';
                    $.ajax({
                        url: '?handler=CreateAuditFromTemplate',
                        type: 'POST',
                        data: JSON.stringify({ templateId: templateId }),
                        contentType: 'application/json',
                        dataType: 'json',
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (result){
                            if (result.success){
                                currentAuditId = result.auditId;
                                $('#sectionList').html(result.sectionListHtml);
                                $('#sectionDetails').html(result.sectionDetailsHtml).show();
                                $('#auditTitle').text(result.auditName).show();
                                getSavedResponse();
                            } else {
                                console.error("Failed to create audit:", result.message);
                                alert('Failed to create audit: ' + (result.message || "Please try again."));
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Ajax error:", error);
                            console.error("Error", xhr.responseText);
                            alert('An error occurred. Please try again.');
                        }
                    });
                } else {
                    alert('Please select a template.');
                }
                
                
        });
            
            $(document).on('click', '#sectionList li', function () {
                var sectionId = $(this).data('section-id');
                
                $('#sectionList li').removeClass('active');
                $(this).addClass('active');
                
                $.ajax({
                    url: '?handler=SectionDetails',
                    type: 'GET',
                    data: { sectionId: sectionId, auditId: currentAuditId },
                    success: function (result){
                        if (result.sectionDetailsHtml){
                            $('#sectionDetails').html(result.sectionDetailsHtml); 
                            getSavedResponse();   
                        } else {
                            console.error("No sectionDetailsHtml in result");
                        }
                    },
                    error: function (xhr, status, error){
                        console.error("Error loading section details:", error);
                        alert('Failed to load section details. Please try again.');
                    }
                });
            });
        });
    
    
        function saveChoice(clickedRadioButton, questionId) {
            var chosenOption = clickedRadioButton.value;
            console.log(`Selected value = ${chosenOption} for question ${questionId}`);
            
            $.ajax({
                url: '?handler=SaveRadio',
                type: 'POST',
                data: JSON.stringify({ 
                    RadioAnswer: chosenOption, 
                    QuestionId: questionId}),
                contentType: 'application/json',
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (result){
                    console.log(result);
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    alert('An error occurred. Please try again.');
                }
            });
        }
        
        function getSavedResponse(){
            if (currentAuditId === null){
                console.error("Audit id is not yet set. Audit might not have been created.");
                return;
            }
        
            $.ajax({
                url: '?handler=SavedResponses&id=' + currentAuditId,
                type: 'GET',
                dataType: 'json',
                headers:{
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {
                    console.log("Received response:", result);
                    if (result.success) {
                        result.responses.forEach(function (response) {
                            var radioValue;
                            switch (response.radioAnswer){
                                case 100: radioValue = "Excellent"; break;
                                case 75: radioValue = "Good"; break;
                                case 50: radioValue = "RequiresImprovement"; break;
                                case 25: radioValue = "Poor"; break;
                                case 0: radioValue = "NotAssessed"; break;
                            }
                            $(`input[name='response-${response.questionId}'][value='${radioValue}']`).prop('checked', true);
                            
                            if (response.textAnswer) {
                                $(`#textAnswer-${response.questionId}`).val(response.textAnswer);
                            }
                        });
                    } else {
                        console.error("Error in response:", result.error);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error loading saved responses, Ajax error:", error);
                    console.error("Response text:", xhr.responseText);  
                }
        });
        }
        
    </script>
}
