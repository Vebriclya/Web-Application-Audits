@page
@model AuditApplication.Pages.AuditTemplates.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}


<div class="container">
    <h2>Create new template</h2>
    
    <div class="row mb-3 justify-content-end">
        <div class="col-auto">
            <button id="addSection" class="btn btn-primary">Add Section</button>
        </div>
    </div>
    
    <div class="row mb-3" id="templateTitleRow">
        <div class="col-md-2">
            <label for="templateTitle">Template Title:</label>
        </div>
        <div class="col-md-8">
            <input type="text" class="form-control" id="templateTitle" placeholder="Enter template title">
        </div>
        <div class="col-md-2">
            <button id="saveTemplate" class="btn btn-success">Save</button>
        </div>
    </div>
    
    <div id="templateTitleDisplay" class="row mb-3 align-items-center" style="display:none;">
        <div class="col-md-10">
            <h3 id="displayedTemplateTitle" class="mb-0"></h3>
        </div>
        <div class="col-md-2 text-right">
            <a href="#" id="editTemplateTitle">Edit</a>
        </div>
    </div>

    <div id="sectionInput" class="row mb-3" style="display:none;">
        <div class="col-md-2">
            <label for="sectionName">Section Title:</label>
        </div>
        <div class="col-md-6">
            <input type="text" id="sectionName" class="form-control" placeholder="Section Title"/>
        </div>
        <div class="col-md-4">
            <button id="saveSection" class="btn btn-success">Save</button>
            <button id="cancelSection" class="btn btn-danger">Cancel</button>
        </div>
    </div>
    
    <div id="templateContent"></div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    <script>
    let templateId = null;

    $(document).ready(function() {
    
        $('#saveTemplate').click(function() {
            let title = $('#templateTitle').val().trim();
            if (title) {
                $.ajax({
                    url: templateId ? '?handler=UpdateTemplate' : '?handler=CreateTemplate',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ id: templateId, name: title }),
                    headers: {
                        "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            templateId = result.id;
                            $('#templateTitleRow').hide();
                            $('#displayedTemplateTitle').text(title);
                            $('#templateTitleDisplay').show();
                            alert('Template saved successfully');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error saving template:', xhr.responseText);
                        alert('Failed to save template. Please try again.');
                    }
                });
            } else {
                alert('Please enter a template title');
            }
        });

        $('#editTemplateTitle').click(function(e) {
            e.preventDefault();
            $('#templateTitleDisplay').hide();
            $('#templateTitleRow').show();
        });

        $('#addSection').click(function() {
            $('#sectionInput').show();
        });

        $('#cancelSection').click(function() {
            $('#sectionInput').hide();
            $('#sectionName').val('');
        });
        
        function addItem(type, name, containerId, callback){
            console.log("ENTERED ADDITEM");
            if (name && name.trim() !== '') {
                let url = type === 'section' ? '?handler=AddSection' : '?handler=AddQuestion';
                let data = type === 'section'
                    ? { name: name, auditTemplateId: templateId }
                    : { text: name, sectionId: parseInt(containerId) };
                    
                console.log(`Sending request: URL: ${url}, DATA: ${data}`);
                if(data.auditTemplateId){
                    console.log(`Data is a ${type}, name: ${data.name}, auditTemplateId: ${data.auditTemplateId}`);
                } else {
                    console.log(`Data is a ${type}, text: ${data.text}, sectionId: ${data.sectionId}`)
                }
                $.ajax({
                    url: url,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    headers: {
                        "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result){
                        console.log("Success");
                        if (result.success){
                            let newItemHtml = createItemHtml(type,  result.id, name);
                            if (type === 'section'){
                                console.log("type was a section");
                                $('#templateContent').append(newItemHtml);
                            } else {
                                console.log("type was a question");
                                $(`#section-${containerId} .questions-container`).append(newItemHtml);
                            }
                            $(`#${type}Input`).hide();
                            $(`#${type}Name`).val('');
                            if (callback) callback(true);
                        } else {
                            alert(result.message || `Failed to add ${type}`);
                            if (callback) callback(false);
                        }
                    }, 
                    error: function (xhr, status, error){
                        console.log(`Error adding ${type}:`, xhr.responseText);
                        alert(`Failed to add ${type}. Please try again.`);
                    }
                });
            }else {
                alert(`Please enter ${type} text.`)
                if (callback) callback(false);
            }
            @*if (name && (type === 'section' ? templateId : true)) {
                let url = type === 'section' ? '?handler=AddSection' : '?handler=AddQuestion';
                let data = type === 'section' 
                    ? { name: name, auditTemplateId: templateId }
                    : { text: name, sectionId: containerId };
                console.log(`ENTERED FIRST IF BLOCK INSIDE ADDITEM. URL: ${url}, DATA: (SECTION... name: ${data.name} / auditTemplateId: ${data.auditTemplateId}) (Question... text: ${data.text} sectionId: ${data.sectionId})`)
                $.ajax({
                    url: url,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    headers: {
                        "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        console.log("Success");
                        if (result.success) {
                            let newItemHtml = createItemHtml(type,  result.id, name);
                            if (type === 'section') {
                                $('#templateContent').append(newItemHtml);
                            } else {
                                $(`section-${containerId} .questions-container`).append(newItemHtml);
                            }
                            $(`#${type}Input`).hide();
                            $(`#${type}Name`).val('');
                        } else {
                            alert(result.message || `Failed to add ${type}`);
                        }
                    }, 
                    error: function (xhr, status, error) {
                        console.log(`You've hit the error. Error adding ${type}`, xhr.responseText);
                        alert(`Failed to add ${type}. Please try again.`);
                    }
                });
            } else {
                alert(`Please enter ${type} text`);
            }*@
        }
        
        function createItemHtml(type, id, name) {
            return `
                <div class="card mb-3 ${type}-item" data-id="${id}" id="${type}-${id}">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <${type === 'section' ? 'h4' : 'p'}>${name}</${type === 'section' ? 'h4' : 'p'}>
                            </div>
                            <div class="col-md-4">
                                <a href="#" class="edit-item" data-type="${type}">Edit</a>
                                <a href="#" class="delete-item" data-type="${type}">‚ùå</a>
                            </div>
                        </div>
                    ${type === 'section' ? `
                        <button class="btn btn-secondary add-question mt-2">Add Question</button>
                        <div class="questions-container"></div>
                    ` : ''}
                </div>
            </div>
        `;
        }

        $('#saveSection').click(function() {
            addItem('section', $('#sectionName').val().trim());
        });

        $(document).on('click', '.add-question', function() {
            let sectionId = $(this).closest('.section-item').data('id');
            console.log(`ENTERED ADD QUESTION, Section Id: ${sectionId}`);
            let questionInput = `
                    <div class="question-input row mt-2">
                        <div class="col-md-6">
                            <input type="text" class="form-control question-text" placeholder="Enter question" />
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-success save-question" data-section-id="${sectionId}">Save</button>
                            <button class="btn btn-danger cancel-question">Cancel</button>
                        </div>
                    </div>
                `;
            $(this).siblings('.questions-container').append(questionInput);
        });


        $(document).on('click', '.save-question', function() {
            let sectionId = $(this).data('section-id');
            let questionInput = $(this).closest('.question-input');
            let questionText = questionInput.find('.question-text').val().trim();
            console.log(`ENTERED SAVE-QUESTION, sectionId: ${sectionId}, questionText: ${questionText}`);
            addItem('question', questionText, sectionId, function (success){
                if (success){
                    questionInput.remove();
                }
            });
        });

        $(document).on('click', '.edit-item', function (e) {
            e.preventDefault();
            let item = $(this).closest('.card');
            let type = $(this).data('type');
            let text = item.find(type === 'section' ? 'h4' : 'p').text().trim();

            item.hide();
            item.after(`
        <div class="edit-${type}-form mb-3">
            <input type="text" class="form-control ${type}-name-edit" value="${text}">
            <button class="btn btn-success save-${type}-edit mt-2" data-id="${item.data('id')}">Save</button>
            <button class="btn btn-danger cancel-${type}-edit mt-2">Cancel</button>
        </div>
    `);
        });

        $(document).on('click', '.save-section-edit, .save-question-edit', function(){
            let type = $(this).hasClass('save-section-edit') ? 'section' : 'question';
            let newName = $(`.${type}-name-edit`).val().trim();
            let id = $(this).data('id');

            if (newName) {
                $.ajax({
                    url: `?handler=Update${type.charAt(0).toUpperCase() + type.slice(1)}`,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ id: id, text: newName }),
                    headers: {
                        "RequestVerificationToken":
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        if (result.success) {
                            $(`#${type}-${id}`).find(type === 'section' ? 'h4' : 'p').text(newName);
                            $(`#${type}-${id}`).show();
                            $(`.edit-${type}-form`).remove();
                        } else {
                            alert(result.message || `Failed to update ${type}`);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(`Error updating ${type}: `, xhr.responseText);
                        alert(`Failed to update ${type}. Please try again.`);
                    }
                });
            } else {
                alert(`Please enter a ${type} name.`);
            }
        });
        
        $(document).on('click', '.cancel-section-edit', '.cancel-question-edit', function(){
            let type = $(this).hasClass('cancel-section-edit') ? 'section' : 'question';
            $(`.edit-${type}-form`).prev().show();
            $(`.edit-${type}-form`).remove();
        });

        $(document).on('click', '.delete-item', function (e) {
            e.preventDefault();
            let item = $(this).closest('.card');
            let type = $(this).data('type');
            let id = item.data('id');

            $.ajax({
                url: `?handler=Delete${type.charAt(0).toUpperCase() + type.slice(1)}`,
                type: 'POST',
                data: JSON.stringify(id),
                contentType: 'application/json',
                headers: {
                    "RequestVerificationToken":
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {
                    if (result.success) {
                        item.remove();
                    } else {
                        alert(result.message || `Failed to delete ${type}`);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(`Error deleting ${type}: `, xhr.responseText);
                    alert(`Failed to delete ${type}. Please try again.`);
                }
            });
        });
        
        $(document).on('click', '.cancel-question', function () {
            $(this).closest('.question-input').remove();
        });
        
    });
    </script>
}
 